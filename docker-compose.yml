version: '3.8'

services:
  sst-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sst-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:${PORT:-80}"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-80}
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - REACT_APP_ENVIRONMENT=production
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template:ro
    restart: unless-stopped
    networks:
      - sst-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-80}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sst-frontend.rule=Host(`${FRONTEND_DOMAIN:-localhost}`)"
      - "traefik.http.routers.sst-frontend.tls=true"
      - "traefik.http.routers.sst-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.sst-frontend.loadbalancer.server.port=${PORT:-80}"
    depends_on:
      - sst-backend
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  sst-backend:
    image: sst-backend:latest
    container_name: sst-backend
    external_links:
      - sst-backend
    networks:
      - sst-network

networks:
  sst-network:
    external: true